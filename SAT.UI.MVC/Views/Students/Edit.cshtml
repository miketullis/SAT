@model SAT.DATA.EF.Student



@{
    ViewBag.Title = "Edit: " + Model.FullName;
}

<div class="card card-body max1000 drop">
    <h2 class="text-center pb-2">@ViewBag.Title</h2>
    <div class="row p-5">
        @using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.StudentId)
                @Html.HiddenFor(model => model.PhotoUrl)

                <div class="row">
                    <div class="form-group col-md-4">
                        <img src="~/Content/assets/images/students/@Model.PhotoUrl" id="studentPhoto" class="mb-4 max90p" />
                        <input type="file" name="studentPhoto" />
                        @Html.ValidationMessageFor(model => model.PhotoUrl, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-8 inFix">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SSID, "Status", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("SSID", null, htmlAttributes: new { @class = "form-control text-white" })
                            @Html.ValidationMessageFor(model => model.SSID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group mb-0">
                    <div class="text-right col-md-12 p-0 pt-4">
                        <input type="submit" value="Save" class="btn btn-primary btn80" />
                        @Html.ActionLink("Withdraw", "Delete", "Students", new { id = Model.StudentId }, new { @class = "btn btn-primary btn80" })
                        @*@Html.ActionLink("Cancel", "Index", "Students", new { @class = "btn btn-primary btn80 mr-0" })*@
                        <a href="javascript:void(0);" onclick="history.go(-1);" class="btn btn-primary btn80 mr-0">Cancel</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
